#+TITLE:     Deploy on OmniOS
#+AUTHOR:    Piotr Kowalski (pi)
#+EMAIL:     piotr.kowalski@me.com
#+DATE:      <2013-05-02 Thu>
#+OPTIONS:   toc:nil

* Install and configure Apache httpd
  OmniOS extras comes with precompiled version of apache22. Most of
  the useful modules are compiled statically into it and the example
  ~httpd.conf~ file is commented extensively.
  - Add pkg publisher with extra stuff
    : # pkg set-publisher -g http://pkg.omniti.com/omniti-ms/ ms.omniti.com
  - Install apache httpd
    : # pkg install apache22
    : # pkg install mod_log_rotate
  - Configure it by creating necessary files (depends on your configuration)
    : # mkdir -p /www/{etc,htdocs,logs,servers,var/run}
    : # cp /opt/apache22/conf/mime.types /www/etc/
  - Enable service
    : # svcadm enable http:apache22
    and check if it works
    : # svcs -xv

* Install PostgreSQL
  Fortunately fresh PostgreSQL database is available from the repo
  but I couldn't find manifest and run script.
  - Install package
    : # pkg install ms.omniti.com/omniti/database/postgresql-924
  - Clone git repo with svcs
    : # git clone https://github.com/pibako/svcs-postgres-92.git /tmp/svcs-postgres-92
    : # cd /tmp/svcs-postgres-92
    : # /bin/sh ./install.sh
  - After first initialization
    : # svcadm enable postgresql_92
    set database initialization flag to true (this should happen
    automatically but it doesn't probably because script is running as
    a ~postgres~ user and it doesn't have permissions to set
    configuration for its own service).
    : # svccfg -s $SMF_FMRI "setprop postgresql_92/initialized = boolean: true"
    : # svccfg -s $SMF_FMRI refresh
  - Just in case add to your ~auto_home~
    : # echo "*       localhost:/export/home/&" >> /etc/auto_home
* Configure PostgreSQL
  There are two things necessary two make it up and running.
  - Create role and database. For this purpose login as a ~postgres~
    user:
    : $ su - postgres
    : $ /opt/pgsql92/bin/psql
    : > CREATE ROLE displejo LOGIN ENCRYPTED PASSWORD 'secret_password' NOINHERIT VALID UNTIL 'infinity';
    : > CREATE DATABASE displejo OWNER displejo ENCODING 'utf8' TEMPLATE template0;
  - If you want to change password for role you can easily do it:
    : > ALTER ROLE displejo PASSWORD 'new_secret_password';
  - Configure database files e.g. in ~pg_hba.conf~ add the following
    line:
    : host    displejo        displejo        10.0.6.1/32             trust
    and in ~postgresql.conf~ add:
    : listen_addresses = '10.0.7.1'

* Create and configure deployer user
  - Auto mount home directory
    : # echo "*       localhost:/export/home/&" >> /etc/auto_home
  - Create user
    : # mkdir -p /export/home/
    : # useradd -u 1000 -g 10 -m -d /export/home/deployer -s /bin/bash deployer
  - Edit with ~visudo~
    : # visudo
    and uncomment the following
    : %sudo ALL=(ALL) NOPASSWD: ALL
  - Create sudo group and add deployer
    : # groupadd sudo
    : # usermod -G sudo deployer

* Configure ImageMagick
  On OpenIndiana ImageMagick is available as a precompiled package but
  it doesn't work with RMagick so you need it to compile from source
  (at least I had to). OmniOS provides fairly recent version of
  ImageMagick and should work out of the box except one
  thing... fonts.
  - Install ghostscript fonts to ~/opt/fonts~:
    : # wget ftp://ftp.imagemagick.org/pub/ImageMagick/delegates/ghostscript-fonts-std-8.11.tar.gz
    : # tar -xzf ghostscript-fonts-std-8.11.tar.gz
    : # mv fonts /opt/
  - Modify ~/opt/omni/etc/ImageMagick/type-ghostscript.xml~ prefixing each ~metrics~ and
    ~glyphs~ with ~/opt/fonts/~
  - Move ~type-ghostscript.xml~ to ~type.xml~

* Install pkg-config
  In order to install several gems it is useful to have ~pkg-config~
  installed. Unfortunately OmniOS doesn't come with pkg-config in any
  repository therefore we must install it from source. Fortunately it
  won't be to difficult.
  - First download latest release and unpack it:
    : # wget http://pkgconfig.freedesktop.org/releases/pkg-config-0.28.tar.gz
    : # tar -xzf pkg-config-0.28.tar.gz
  - Then compile it and install (by default in ~/usr/local/~)
    : # cd ~/pkg-config-0.28
    : # ./configure --with-internal-glib
    : # make && make install
  - Lastly modify your ~$PATH~ to include ~/usr/local/bin~ and set
    ~$PKG_CONFIG_PATH~ variable.
    : # echo "export PATH=$PATH:/usr/local/bin" >> ~/.profile
    : # echo "export PKG_CONFIG_PATH=/opt/omni/lib/pkgconfig:$PKG_CONFIG_PATH" >> ~/.profile

* Install nodejs
  We must compile it from source.
  - So grab the latest version from http://nodejs.org/download/ and
    unpack it:
    : $ wget http://nodejs.org/dist/v0.10.5/node-v0.10.5.tar.gz
    : $ tar -xzf node-v0.10.5.tar.gz && cd node-v0.10.5
  - Add ~gcc~ to your path (it is in ~/opt/~ directory)
  - Configure node
    : $ CC=gcc ./configure
    : $ PATH=/usr/gnu/i386-pc-solaris2.11/bin:$PATH make
    : # make install

* References
  - http://virtuallyhyper.com/2013/04/installing-and-configuring-omnios/
  - http://omnios.omniti.com/wiki.php/GeneralAdministration
  - https://github.com/stefri/omnios-build/tree/cc4a53561e5cd57def075fc5777ac11b0078438c/build/postgres92
  - https://github.com/omniti-labs/omnios-build/tree/omniti-ms/build/apache22
  - http://rmagick.rubyforge.org/install-faq.html#fonts
  - http://www.imagemagick.org/script/resources.php
